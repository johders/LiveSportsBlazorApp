@page "/live"

@inject NavigationManager Navigation
@inject ICompetitionService CompetitionService
@inject IReportService ReportService

@implements IAsyncDisposable

<PageTitle>World Cup Live</PageTitle>

@if (liveMatchup != null)
{
	<MatchupDisplay Matchup="liveMatchup" />
}

<ul id="messageList">
	@foreach (var message in messages)
	{
		<li>@message</li>
	}
</ul>

@code {
	private HubConnection? hubConnection;
	private List<string> messages = new();

	private Matchup? liveMatchup;

	protected override async Task OnInitializedAsync()
	{
		hubConnection = new HubConnectionBuilder()
			.WithUrl(Navigation.ToAbsoluteUri(AppConstants.HubUrl))
			.Build();

		hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
		{
			messages = ReportService.Messages();
			InvokeAsync(StateHasChanged);
		});

		hubConnection.On<Matchup>("ReceiveMatchup", (matchup) =>
		{
			liveMatchup = matchup;
			InvokeAsync(StateHasChanged);
		});

		await hubConnection.StartAsync();
	}

	public async ValueTask DisposeAsync()
	{
		if (hubConnection is not null)
		{
			await hubConnection.DisposeAsync();
		}
	}
}
